{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","history.js","components/pages/About.js","components/pages/Default.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","react_router_dom","to","defaultProps","prototypes","PropTypes","string","isRequired","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","deleteContact","children","Component","Consumer","Contact","showInfo","onDeleteClick","delete","_this2","style","textTransform","name","onClick","cursor","float","color","marginRight","email","phone","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","PropType","AddContact","errors","onInputChange","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","bind","createBrowserHistory","About","Default","EditContact","updContact","match","params","put","App","context_Provider","react_router","layout_Header","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91fb8f8c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header(props) {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.prototypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const response = await axios.get(\n      `https://jsonplaceholder.typicode.com/users`\n    );\n\n    this.setState({ contacts: response.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider\n        value={{\n          ...this.state,\n          deleteContact: this.deleteContact\n        }}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends React.Component {\n  state = {\n    showInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    const { contact } = this.props;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4 style={{ textTransform: \"capitalize\" }}>\n                {contact.name}{\" \"}\n                <i\n                  className=\"fas fa-sort-down\"\n                  onClick={() =>\n                    this.setState({ showInfo: !this.state.showInfo })\n                  }\n                  style={{ cursor: \"pointer\" }}\n                />\n                <div\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={() => this.onDeleteClick(contact.id, dispatch)}\n                />\n                <Link to={`contact/edit/${contact.id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {this.state.showInfo && (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {contact.email}</li>\n                  <li className=\"list-group-item\">Phone: {contact.phone}</li>\n                </ul>\n              )}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport default function TextInputGroup({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"name\">Name</label>\n      <input\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n}\n\nTextInputGroup.PropType = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n","import React, { Component } from \"react\";\nimport uuid from \"uuid\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onInputChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // check fro errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone number is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const response = await axios.post(\n      `https://jsonplaceholder.typicode.com/users`,\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: response.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    placeholder=\"Enter name...\"\n                    value={name}\n                    onChange={this.onInputChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    placeholder=\"example@example.com\"\n                    value={email}\n                    onChange={this.onInputChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name=\"phone\"\n                    placeholder=\"555-555-5555\"\n                    value={phone}\n                    onChange={this.onInputChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nexport default function Default() {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport uuid from \"uuid\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const response = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = response.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onInputChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // check fro errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone number is required\" } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const response = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: response.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    placeholder=\"Enter name...\"\n                    value={name}\n                    onChange={this.onInputChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    placeholder=\"example@example.com\"\n                    value={email}\n                    onChange={this.onInputChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name=\"phone\"\n                    placeholder=\"555-555-5555\"\n                    value={phone}\n                    onChange={this.onInputChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport history from \"./history\";\nimport About from \"./components/pages/About\";\nimport Default from \"./components/pages/Default\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router history={history}>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={Default} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}